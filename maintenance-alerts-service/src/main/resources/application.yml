spring:
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    consumer:
      group-id: notification-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "*"
  mvc:
    path match:
      matching-strategy: ant_path_matcher
  graphql:
    graphiql:
      enabled: true
    path: /graphql
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect

server:
  error:
    include-message: always
    include-binding-errors: always
    include-stacktrace: never
    include-exception: false

app:
  jwtSecret: ${JWT_SECRET}
  cors:
    allowed-origins: "http://localhost:3000"
